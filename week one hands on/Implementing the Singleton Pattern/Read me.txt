Implements the Singleton Pattern to ensure that only one instance of a class is created throughout the program lifecycle.

▶️ Files:
- Singleton.java
- Main.java

💡 Key Concepts:
- Private constructor
- Static instance variable
- Public method for lazy initialization

💻 Run Commands:
javac Singleton.java Main.java  
java Main

🔍 Output:
- Singleton Instance Created
- Hello from Singleton!
- Are both objects same? true

📚 Theory:
The Singleton Pattern ensures a class has only one instance and provides a global point of access to it.
It restricts external instantiation by making the constructor private.
This pattern is commonly used in logging, configuration, and caching.
It uses lazy initialization to create the instance only when needed.
It promotes controlled access and resource saving.