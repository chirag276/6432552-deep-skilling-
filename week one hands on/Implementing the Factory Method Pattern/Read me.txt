Implements Factory Method Pattern where object creation is abstracted via a factory class.

▶️ Files:
- Product.java
- BasicProduct.java
- ProductFactory.java
- Main.java

💡 Key Concepts:
- Interface-based product creation
- Open/Closed Principle
- Factory encapsulates instantiation

💻 Run Commands:
javac *.java  
java Main

🔍 Output Example:
- 📦 This is a Basic Product.
- ❌ Product creation failed (if input is invalid)

📚 Theory:
Factory Method is a creational pattern that provides an interface for creating objects in a superclass.
It allows subclasses or factories to alter the type of object that will be created.
This supports code extensibility and flexibility.
It follows the Open/Closed Principle — the factory can grow without changes.
It's useful in scenarios where object creation is complex or should be hidden.